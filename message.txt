Hi Kyle, 

I have implemented the 5 degrees slots averaging. Instead of having an array of 72 slots, I average 
the angle when its within 10*n to 10*n+5 degrees where n is an integer. once the angle becomes larger
than 10*n+5, I average withing 10*(n+1) to 10*(n+1)+5 and so forth. 

In other words, I average until the angel hops to the next slot. 

I'm not sure if that's what you want because the hops between slots may not be smooth unless the 
angle moves very slowly. Please, let me know if that's what you expect. 

Also, could you please send me the original code to load it on the arduino?
I was not able to go to lab today but tested on offline sensor data I had. 


Here is a pseudo code of my algorithm


//**************************************************************************************************
for each new sensor data from arduino:
	normalize
	compute pitch, yaw, and roll anges 
	pitch = do_5_deg_slot_average(pitch)
	roll  = do_5_deg_slot_average(roll)
	yaw   = do_5_deg_slot_average(yaw)

function do_5_deg_slot_average( x ): 
	first time  the function is called it initializes lower and upper limits as follows 
		lower = x - (5 % x)
		upper = (x + 5) - (x+5) % 5
		count = 1
		sum   = x 
	

	if lower <= x <= upper: 
		sum += x 
		count ++ 
	else: 
		sum = x 
		count = 1
		// recalculate limits: 
		lower = x - (5 % x)
		upper = (x + 5) - (x+5) % 5
	return sum/count 
//**************************************************************************************************

Here is an example output for a an angle x from 1 to 50 degrees 

x   averaged_by_slots
---------------------
1 	1
2 	1.5
3 	2.0
4 	2.5
5 	3.0
6 	6
7 	6.5
8 	7.0
9 	7.5
10 	8.0
11 	11
12 	11.5
13 	12.0
14 	12.5
15 	13.0
16 	16
17 	16.5
18 	17.0
19 	17.5
20 	18.0
21 	21
22 	21.5
23 	22.0
24 	22.5
25 	23.0
26 	26
27 	26.5
28 	27.0
29 	27.5
30 	28.0
31 	31
32 	31.5
33 	32.0
34 	32.5
35 	33.0
36 	36
37 	36.5
38 	37.0
39 	37.5
40 	38.0
41 	41
42 	41.5
43 	42.0
44 	42.5
45 	43.0
46 	46
47 	46.5
48 	47.0
49 	47.5
